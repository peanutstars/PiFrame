#!/bin/bash

PFCMD="$1"
BASEDIR=/system
BINDIR=$BASEDIR/bin
LIBDIR=$BASEDIR/lib
DRVDIR=$BASEDIR/driver
SCRDIR=$BASEDIR/scripts
DEFDIR=$BASEDIR/default
SUDO=

COLOR_YELLOW="\033[33m"
COLOR_GREEN="\033[32m"
COLOR_NONE="\033[0m"


fEcho() {
	echo -e "${COLOR_YELLOW}@@ $1 @@${COLOR_NONE}"
}

fGetCurTime() {
	echo `cat /proc/uptime | awk '{ print $1 }' | sed 's/\.//g'`
}


fWait() {
	local _timeout=${1}00
	local _expire=0
	local _rv=0

	let "_expire = `fGetCurTime` + _timeout"
	fEcho "Waiting Start $2 : `fGetCurTime` - $_timeout"
	while [ "`fGetCurTime`" -le "$_expire" ] ;
	do
		sleep 1
		_rv=$($2)
		if [ "$_rv" -eq "1" ] ; then
			break
		fi
	done
	fEcho "Waiting End $2 : `fGetCurTime`"
}

fGetConfigInit() {
	local _rv=`cli config dump init | grep 'init='`
	if [ "$_rv" == "init=1" ] ; then
		echo "1"
	else
		echo "0"
	fi
}

fLoadDriver() {
	_RV=`lsmod | grep vmq`
	if [ x"$_RV" == x"" ] ; then
		$SUDO $SCRDIR/pi-frame.init
	fi
	[ -n "$SUDO" ] && $SUDO chmod 0666 /dev/vmq /dev/vmshm
}

fRunService() {
	fEcho "[START] $1"
	$* &
}

fStartService() {
	fEcho "Starting SERVICE !!"
	fRunService svc.config
	fWait 10 fGetConfigInit		# Wait a config loading to done
	fRunService svc.service
	fRunService svc.action
	fEcho "Started All SERVICE."
}

fStopService() {
	fEcho "Stop SERVICE !!"
}

fInit() {
	fEcho "INIT"
	. $SCRDIR/pf-env
	if [[ $EUID -ne 0 ]]; then
		SUDO=sudo
	fi
}

fStart() {
	fEcho "START BEGIN"
	fLoadDriver
	fStartService
	fEcho "START END"
}

fStop() {
	fEcho "STOP BEGIN"
	fStopService
	$BINDIR/cli notify SYS_POWER_OFF
	fEcho "STOP END"
}

###################################################
# Main

fInit

case "$PFCMD" in
	start)
		fStart
	;;  
	stop)
		fStop
	;;
	*)  
	echo "Usage: $0 {start|stop}"
	exit 1
	;;  
esac
